= render :partial => "maps_header"

- content_for :maps do
  = YandexMap.header.html_safe

= @place_map.to_html.html_safe

- content_for :page_title do
  = t(".key_words", :name => @place.title)

- content_for :page_description do
  = t(".page_description", :name => @place.title)

%h1
  = @place.title

#main_content
  - if !@gg_locate.success and !@place.coordinate
    .error
      = t('.not_found_place')
  .item.padding_3
    = @place_map.div(:width => 572, :height => 400).html_safe
  - if can?(:edit, Place)
    = render :partial => "places/maps/form"
    %br

  - if @place.articles.any?
    .title
      = t(".articles", :name => @place.title)
    = render :partial => "places/article", :collection=>@place.articles.order("id").limit(3)
  - if @place.hotels.public_items.any?
    .title
      = "#{ t("hotels.navigation") } #{@place.title}"
    = render :partial => "hotels/hotel", :collection=>@place.hotels.public_items

  %br
  - if @place.dynamic_fields.any?
    .title
      =  t(".add_params", :name => @place.title)
    .item.padding_5
      - @place.dynamic_fields.each do |field|
        = field.title
        %br


  -#if can? :create, Image
    %div
      %span.ele_notice
        = t('places.images.form.notice')
      = render :partial => "places/images/form"


  -if @images.any?
    %p
      %b
        =t('.total_images', :name => @place.title)
      = @place.images_count


    #images_area
      = render :partial => "places/images/image_area"
  -else
    - if can?(:manage, Place)
      #create_images
        = link_to t('places.images.form.image'), place_images_path(@place)




#navigation
  = children_places_for(@place)
  = articles_for(@place)
  - if can?(:edit, Place)
    %br
    = link_to t(".new_article"), new_place_article_path(@place), :class => "edit"
    %br
    = link_to t('edit'), edit_place_path(@place), :class => "edit"

:javascript
  $("a[rel=img_group]").fancybox({
  'transitionIn'	:	'elastic',
  'transitionOut'	:	'elastic',
  'speedIn'		:	600,
  'speedOut'		:	200,
  'overlayShow'	:	false
  });

